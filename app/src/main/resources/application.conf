ktor {
  development = false
  deployment {
    port = ${SERVER_PORT}
    callLogging {
      isEnabled = true
    }
    httpsRedirect {
      isEnabled = false
      sslPort = ${SERVER_SSL_PORT}
    }
    routing {
      v1 {
        isEnabled = true
        entrypoint = "/v1"
      }
    }
  }
  application {
    modules = [
      beauty.shafran.network.ApplicationKt.koin,
      beauty.shafran.network.AuthKt.jwtAuth,
      beauty.shafran.network.SerializationKt.serialization,
      beauty.shafran.network.CallLoggingKt.callLogging
      beauty.shafran.network.HttpsRedirectKt.httpsRedirect,
      beauty.shafran.network.RoutingV1Kt.routing,
      beauty.shafran.network.ExceptionsKt.exceptionsHandler,
    ]
  }
  feature {
    assets.publicUrl = ${PUBLIC_ASSETS_URL}
  }
  security {
    //        ssl {
    //          keyStore = ${SSL_STORE}
    //          keyAlias = ${SSL_ALIAS}
    //          keyStorePassword = ${SSL_STORE_PASSWORD}
    //          privateKeyPassword = ${SSL_PASSWORD}
    //        }
    api {
      key {
        header = ${API_HEADER}
        key = ${API_KEY}
      }
      auth {
        header = ${JWT_REALM}
      }
      jwt {
        issuer = ${JWT_ISSUER}
        audience = ${JWT_AUDIENCE}
        path = ${JWT_STORE}
        alias = ${JWT_ALIAS}
        password = ${JWT_PASSWORD}
        storePassword = ${JWT_STORE_PASSWORD}
        realm = ${JWT_REALM}
        accessTokenExpiresAfter = ${JWT_ACCESS_EXPIRE}
        refreshTokenExpiresAfter = ${JWT_REFRESH_EXPIRE}
      }
    }
  }
}
exposed {
  datasource {
    url = ${DATABASE_URL}
    user = ${DATABASE_USERNAME}
    password = ${DATABASE_PASSWORD}
    driver = org.postgresql.Driver
    createOnSetup = true
  }
}