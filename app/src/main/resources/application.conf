ktor {
  development = false
  deployment {
    port = ${SERVER_PORT}
    callLogging = true
    //    sslPort = ${SERVER_SSL_PORT}
  }
  application {
    modules = [
      beauty.shafran.KtorDatabaseInitializerKt.initializeDatabase,
      beauty.shafran.KoinKt.koin,
      beauty.shafran.HttpsRedirectKt.httpsRedirect,
      beauty.shafran.AuthenticationKt.jwtAuthentication,
      beauty.shafran.AuthenticationKt.adminAuthentication,
      beauty.shafran.SerializationKt.serialization,
      beauty.shafran.ExceptionsKt.exceptionsHandler,
      beauty.shafran.CallLoggingKt.callLogging
      beauty.shafran.RoutingKt.v1Routing,
      beauty.shafran.network.admin.AdminRouteKt.adminRouting,
    ]
  }
  feature {
    assets.publicUrl = ${PUBLIC_ASSETS_URL}
  }
  security {
    //        ssl {
    //          keyStore = ${SSL_STORE}
    //          keyAlias = ${SSL_ALIAS}
    //          keyStorePassword = ${SSL_STORE_PASSWORD}
    //          privateKeyPassword = ${SSL_PASSWORD}
    //        }
    api {
      key {
        header = ${API_HEADER}
        key = ${API_KEY}
      }
      auth {
        header = ${JWT_REALM}
      }
      jwt {
        issuer = ${JWT_ISSUER}
        audience = ${JWT_AUDIENCE}
        path = ${JWT_STORE}
        alias = ${JWT_ALIAS}
        password = ${JWT_PASSWORD}
        storePassword = ${JWT_STORE_PASSWORD}
        realm = ${JWT_REALM}
        accessTokenExpiresAfter = ${JWT_ACCESS_EXPIRE}
        refreshTokenExpiresAfter = ${JWT_REFRESH_EXPIRE}
      }
    }
  }
}
exposed {
  datasource {
    url = ${DATABASE_URL}
    user = ${DATABASE_USERNAME}
    password = ${DATABASE_PASSWORD}
    driver = org.postgresql.Driver
  }
}